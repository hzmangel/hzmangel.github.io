<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on 湖间小筑</title>
    <link>http://hzmangel.github.io/tags/programming/</link>
    <description>Recent content in Programming on 湖间小筑</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright - ©2015 - hzmangel</copyright>
    <lastBuildDate>Wed, 10 Aug 2016 00:07:40 +0800</lastBuildDate>
    
	<atom:link href="http://hzmangel.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rails - Fix ActiveModel::ForbiddenAttributesError in grape
</title>
      <link>http://hzmangel.github.io/post/grape_n_strong_parameter/</link>
      <pubDate>Wed, 10 Aug 2016 00:07:40 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/grape_n_strong_parameter/</guid>
      <description>&lt;p&gt;最近尝试在 &lt;em&gt;Grape API&lt;/em&gt; 中创建一个 &lt;em&gt;ActiveModel&lt;/em&gt; ，但是在使用 &lt;code&gt;new&lt;/code&gt; 创建的时候发现会报 &lt;code&gt;ActiveModel::ForbiddenAttributesError&lt;/code&gt; 错误。想了想估计是碰上了 &lt;em&gt;stronng parameters&lt;/em&gt; 的问题。按照之前的经验，那就是给参数加上一个permit，但是发现在调用 &lt;code&gt;permit!&lt;/code&gt; 之后，grape的params变成了空字典，从而造成后续的创建出错。在网上找了一圈，结果发现 grape 自己的Github页面上就有说明，如果需要和 Rails 4 一起使用，需要加上 &lt;em&gt;hashie-forbidden_attributes&lt;/em&gt; gem。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rails - Reload Parent Page in iframe
</title>
      <link>http://hzmangel.github.io/post/rails_reload_parent_in_iframe/</link>
      <pubDate>Sun, 17 Apr 2016 12:59:42 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/rails_reload_parent_in_iframe/</guid>
      <description>&lt;p&gt;最近碰到的一个问题，弹出的 iframe 窗口在做完操作并把结果返回给 controller 后，调用 &lt;code&gt;render&lt;/code&gt; 或 &lt;code&gt;redirect_to&lt;/code&gt; 时都只会刷新 iframe 中的内容，而不会将整个页面都刷新。尝试在 iframe 中提交表单时关闭 iframe 窗口，但是依然无效。最后发现还是需要借助于 Javascript ，最后的解决方案如下：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integrate Rails with Elasticsearch - Indexing
</title>
      <link>http://hzmangel.github.io/post/rails_elasticsearch_indexing/</link>
      <pubDate>Tue, 23 Feb 2016 00:52:42 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/rails_elasticsearch_indexing/</guid>
      <description>&lt;p&gt;之前写Rails在查找这块一般都是用DB内置的查询，不过上次试了下用 Elasticsearch ，比之前想像的要简单，记点东西在这吧。&lt;/p&gt;

&lt;p&gt;这篇东西会包含下面几项内容：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;安装 Elasticsearch&lt;/li&gt;
&lt;li&gt;关联 Rails 与 Elasticsearch&lt;/li&gt;
&lt;li&gt;配置索引内容&lt;/li&gt;
&lt;li&gt;Custom Analyzer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本文没有完整系统的介绍，更多的只是一些使用技巧。详细说明请参见[官方文档]()。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Different Auth Method In Rails API Controller
</title>
      <link>http://hzmangel.github.io/post/different_auth_method_in_rails_api/</link>
      <pubDate>Wed, 27 Jan 2016 23:21:42 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/different_auth_method_in_rails_api/</guid>
      <description>&lt;p&gt;开发的时候碰到一个问题，Rails的controller是用devise来提供认证的，如果用户在访问时没有有效的cookie就会被转到登录界面。但是在API的时候不能用cookie，所以需要分开做验证。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hadoop Study Log 1: Env Setup
</title>
      <link>http://hzmangel.github.io/post/hadoop_study_log_1_env_setup/</link>
      <pubDate>Sun, 17 Jan 2016 07:22:32 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/hadoop_study_log_1_env_setup/</guid>
      <description>&lt;p&gt;最近想折腾数据，于是决定从基础的Hadoop开始。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go generate study
</title>
      <link>http://hzmangel.github.io/post/go-generate-struct-to-schema/</link>
      <pubDate>Mon, 07 Dec 2015 21:15:45 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/go-generate-struct-to-schema/</guid>
      <description>&lt;p&gt;最近在折腾用Golang弄DB，定义完了 &lt;code&gt;struct&lt;/code&gt; 后发现好像没有 ORM 可以把这个 &lt;code&gt;struct&lt;/code&gt; 给映射到某张表上，所以需要：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;手动创建表结构，包括折腾表名和数据结构&lt;/li&gt;
&lt;li&gt;同步代码中的字段和表结构&lt;/li&gt;
&lt;li&gt;如果要换DB还得再来一次&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;于是，开始找有没有像 Rails 中一样的生成器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W3 - Communities in Social Network (Basic)
</title>
      <link>http://hzmangel.github.io/post/mmds-w3-communities-in-social-networks-basic/</link>
      <pubDate>Wed, 11 Nov 2015 23:53:33 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w3-communities-in-social-networks-basic/</guid>
      <description>&lt;p&gt;第三周分两部分，第一部分是 &lt;em&gt;Communities in Social Network&lt;/em&gt; 。是介绍如何在社交网络中给用户分组的。这一部分的课也分为基础和高级，这一篇是基础， 高级的课程另开一篇吧（主要是基础中还有些东西没完全弄明白&amp;hellip;）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W2 - Frequent Itemsets - Part II
</title>
      <link>http://hzmangel.github.io/post/mmds-w2-frequent-itemsets-p2/</link>
      <pubDate>Wed, 01 Jul 2015 18:20:21 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w2-frequent-itemsets-p2/</guid>
      <description>&lt;p&gt;这一部分介绍 &lt;em&gt;A-Priori&lt;/em&gt; 算法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W2 - Frequent Itemsets - Part I
</title>
      <link>http://hzmangel.github.io/post/mmds-w2-frequent-itemsets-p1/</link>
      <pubDate>Fri, 26 Jun 2015 19:35:21 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w2-frequent-itemsets-p1/</guid>
      <description>&lt;p&gt;第二周的最后一块内容是 &lt;em&gt;Frequent Itemsets&lt;/em&gt; 。主要介绍了 &lt;em&gt;Frequent Itemsets&lt;/em&gt; ， &lt;em&gt;Association Rule&lt;/em&gt; 以及算法。这一部分介绍前面的，后面一篇会介绍算法和优化。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W2 - Nearest Neighbor Learning
</title>
      <link>http://hzmangel.github.io/post/mmds-w2-nearest-neighbor-learning/</link>
      <pubDate>Wed, 24 Jun 2015 02:20:33 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w2-nearest-neighbor-learning/</guid>
      <description>&lt;p&gt;第二周的 &lt;em&gt;Nearest Neighbor Learning&lt;/em&gt; 只是一个大概的介绍。这是一个通过在训练集中找到离待查询数据最近的点从而做出预测的方法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W2 - Locality-Sensitive Hashing
</title>
      <link>http://hzmangel.github.io/post/mmds-w2-locality-sensitive-hashing/</link>
      <pubDate>Wed, 17 Jun 2015 08:02:10 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w2-locality-sensitive-hashing/</guid>
      <description>&lt;p&gt;Locality-Sensitive Hashing，LSH，局部敏感hash或叫位置敏感hash。它的想法是在对原始数据空间的数据做Hash后，让位置相邻的数据有很大概率被放到同一个或者相近的bucket中，而不相邻的点放在一起的概率要很小。这样就会减少后期数据处理的数据集，从而简化后续的工作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Set timezone in Python
</title>
      <link>http://hzmangel.github.io/post/timezone-in-python/</link>
      <pubDate>Tue, 16 Jun 2015 23:40:10 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/timezone-in-python/</guid>
      <description>&lt;p&gt;今天在写一个脚本的时候，发现使用&lt;code&gt;datetime.datetime.now()&lt;/code&gt;输出的是UTC时间，而同样的命令在ipython中输入的就是本地的时间。找了好久才找到不用&lt;code&gt;pytz&lt;/code&gt;的解决方案：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W1 - Link Analysis
</title>
      <link>http://hzmangel.github.io/post/mmds-w1-link-analysis/</link>
      <pubDate>Sun, 14 Jun 2015 17:10:58 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w1-link-analysis/</guid>
      <description>&lt;p&gt;第一周的后半部分讲的是Link Analysis，主要讲的是&lt;strong&gt;PageRank&lt;/strong&gt;的计算。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MMDS Notes: W1 - HDFS &amp; MR
</title>
      <link>http://hzmangel.github.io/post/mmds-w1-hdfs-mr/</link>
      <pubDate>Sat, 13 Jun 2015 23:13:32 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/mmds-w1-hdfs-mr/</guid>
      <description>&lt;p&gt;前段时间在Cousera上各种挤时间跟完了一门 &lt;a href=&#34;https://class.coursera.org/mmds-002&#34;&gt;MMDS&lt;/a&gt; ，手上留下了一堆笔记，整理下，顺便给新blog开光吧。&lt;/p&gt;

&lt;p&gt;课程总共7周，这篇整理的第一周的 &lt;code&gt;HDFS&lt;/code&gt; 和 &lt;code&gt;MR&lt;/code&gt; 部分。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blog搬(zhe)家(teng)记</title>
      <link>http://hzmangel.github.io/post/new-github-blog/</link>
      <pubDate>Sat, 13 Jun 2015 11:36:18 +0800</pubDate>
      
      <guid>http://hzmangel.github.io/post/new-github-blog/</guid>
      <description>&lt;p&gt;其实把blog从WP挪出来的想法很早前就有了，只是由于拖延症的原因一直没去弄。不过最近可能是处于病情的低谷期，所以就动手了。&lt;/p&gt;

&lt;p&gt;当初想把blog搬家的主要需求也就下面这些：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;能用Markdown写。除了写着舒服外，这不是还能装13嘛～&lt;/li&gt;
&lt;li&gt;之前那些内容能弄过来，折腾来折腾去弄了这么久，之前的东西还是想保留下的。&lt;/li&gt;
&lt;li&gt;模板稍微好看点（不过这个最后证实了还是需要自己弄，诶）。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Control Goroutines amount via bufferred channel</title>
      <link>http://hzmangel.github.io/post/1239/</link>
      <pubDate>Sat, 19 Apr 2014 23:23:51 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1239/</guid>
      <description>&lt;p&gt;最近还是在写爬虫，然后发现用goroutine是很快，但是很容易就碰到并发数过多被服务器限制的问题。虽然说让goroutine在起来前睡一小会能解决一些问题
，但是终归感觉这样的办法不靠谱。继续翻文档发现&lt;code&gt;bufferred channel&lt;/code&gt;用在这不错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang and JSON API</title>
      <link>http://hzmangel.github.io/post/1233/</link>
      <pubDate>Thu, 20 Feb 2014 01:44:55 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1233/</guid>
      <description>&lt;p&gt;最近在尝试用golang做爬虫类的东西，避免不了需要处理JSON API。其间碰到了些问题，记在这里以便下次查阅。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>goroutines &#43; channel</title>
      <link>http://hzmangel.github.io/post/1230/</link>
      <pubDate>Mon, 17 Feb 2014 01:40:16 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1230/</guid>
      <description>&lt;p&gt;&lt;code&gt;channel&lt;/code&gt;是golang里面一个比较有意思的东西，可以把它看成是一个semaphone（无缓存版队列）或者FIFO（有缓存版队列）。这篇文章只是把最
近用到的一些东西归纳了一下，就算是给自己留份存档吧。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Save base64 image with carrierwave and bootstrap-wysiwyg</title>
      <link>http://hzmangel.github.io/post/1224/</link>
      <pubDate>Sun, 01 Dec 2013 15:03:37 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1224/</guid>
      <description>&lt;h3 id=&#34;tl-dr&#34;&gt;tl;dr&lt;/h3&gt;

&lt;p&gt;The pasted image will be converted to base64 encoded format, which will hit
response size limitation of server. This article is talking about save image
to file with carrierwave.&lt;/p&gt;

&lt;p&gt;The source code is available at &lt;a href=&#34;https://github.com/hzmangel/base64_image_carrierwave&#34;&gt;github
repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next is the full version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ajax loading multi series to jqPlot</title>
      <link>http://hzmangel.github.io/post/1220/</link>
      <pubDate>Sun, 14 Jul 2013 11:21:07 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1220/</guid>
      <description>The Ajax example of jqPlot only shows how to plot on series data, but the request I have met needs multi series. The solution is easy, just record here for later reference.
In the example, The function used to load ajax data is ajaxDataRenderer, which returns array of data. For multi series, just return more than one data array. Here is a sample data set:
[ [ [1,1],[2,2],[3,3],[4,4],[5,5] ], [ [5,1],[4,2],[3,3],[2,4],[1,5] ] ]  </description>
    </item>
    
    <item>
      <title>Some failed attempts on PNaCl</title>
      <link>http://hzmangel.github.io/post/1214/</link>
      <pubDate>Thu, 20 Jun 2013 20:03:56 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1214/</guid>
      <description>&lt;p&gt;Google has released his &lt;a href=&#34;http://www.chromium.org/nativeclient/pnacl
/building-and-testing-portable-native-client&#34;&gt;PNaCl&lt;/a&gt; project on Google I/O 2013,
which can allow user to write portable native client application. The portable
native client application can be translated to native client program and
executed on supported architecture.&lt;/p&gt;

&lt;p&gt;The official toolchain contains clang frontend, which can only be used to
compile C/C++ code to PNaCl application. But the PNaCl application is a subset
of LLVM so I have tried some other languages have LLVM frontend. I am still
working on the solution, and this article is just recording some failed
attempts.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Uploading multiple attachments with carrierwave/mongoid/nested_form</title>
      <link>http://hzmangel.github.io/post/1210/</link>
      <pubDate>Tue, 07 May 2013 23:30:25 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1210/</guid>
      <description>&lt;p&gt;Recently I have met a requirement that need to upload multiple attachments to
a rails project. After some investigations, I choose &lt;code&gt;carrierwave&lt;/code&gt; finally.
Also, I selected &lt;code&gt;nested_form&lt;/code&gt; to manage uploading and deleting multiple
attachments.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Rails with Redis</title>
      <link>http://hzmangel.github.io/post/1205/</link>
      <pubDate>Thu, 25 Apr 2013 16:56:17 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1205/</guid>
      <description>&lt;p&gt;I have met an issue recently that the Rails site always returns 502 error for
some page. After some investigation, I have found that the problem is caused
by a long time query of database, which exceeds the timeout value of unicorn
configuration, then the unicorn worker process will be killed and the Nginx
returns 502 to user.&lt;/p&gt;

&lt;p&gt;So the solution for this kind prblem is to put the job into some background
task, and use some other method to inform the frontend when job done. Finally
I choose the Redis for this task.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>iOS Code Snippets - UITableView</title>
      <link>http://hzmangel.github.io/post/1201/</link>
      <pubDate>Tue, 12 Mar 2013 00:06:08 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1201/</guid>
      <description>&lt;p&gt;Just created a project on BitBucket to save some iOS code snippets, and the first project is a simple UITableViewController one. The code is placed at &lt;a href=&#34;http://goo.gl/0ZrcA&#34;&gt;http://goo.gl/0ZrcA&lt;/a&gt;. The text above is the introduction text for that project, please reference the code for detailed information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>@property and its attributes</title>
      <link>http://hzmangel.github.io/post/1195/</link>
      <pubDate>Sun, 10 Feb 2013 00:06:18 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1195/</guid>
      <description>&lt;p&gt;Recently working on iOS project, and have met some problems while using the
attributes of &lt;code&gt;@property&lt;/code&gt;. I have searched some documents and here is my idea
about this.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Change font size of UITextView dynamically</title>
      <link>http://hzmangel.github.io/post/1191/</link>
      <pubDate>Tue, 29 Jan 2013 10:48:04 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1191/</guid>
      <description>I am working on a UITextView related problem recently, the widget, which have a fixed size, but need to show all content passed in. The text passed in have different length, so the font size should be different. The code snippet below will change the font size dynamically based on the text.
// Set the text before setting font size my_text_view.text = foo_text; // Set the default font name and size int pre_defined_font_size = 14; my_text_view.</description>
    </item>
    
    <item>
      <title>Show alert box in calendar operations of iOS6</title>
      <link>http://hzmangel.github.io/post/1189/</link>
      <pubDate>Thu, 24 Jan 2013 23:47:55 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1189/</guid>
      <description>With the new permission schema in iOS6, app should acquire authentication before accessing calendar. So the code for calendar operation should be surrounded like this:
EKEventStore *eventStore = [[EKEventStore alloc] init]; EKEvent *event = [EKEvent eventWithEventStore:eventStore]; [eventStore requestAccessToEntityType:EKEntityTypeEvent completion:^(BOOL granted, NSError *error) { if (granted) { // Calendar operation } }];  As you can see, the code for calendar operation is written in a block.
After the operation completed, you may want to show customer an alert box to say the operation is done.</description>
    </item>
    
    <item>
      <title>Compile Object-C program in command line</title>
      <link>http://hzmangel.github.io/post/1183/</link>
      <pubDate>Thu, 24 Jan 2013 09:41:13 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1183/</guid>
      <description>&lt;p&gt;Recently I am working on an iOS project, and I am getting interested in the
language itself. But it is inconvenient to start Xcode for each program,
especially for program without UI elements in. So I want to set up a command
line environment that can compile and execute ObjC program.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Invoke map app in iOS app</title>
      <link>http://hzmangel.github.io/post/1176/</link>
      <pubDate>Wed, 26 Dec 2012 11:28:34 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1176/</guid>
      <description>&lt;p&gt;最近在写个app，要调地图来展示一个地点，于是就有了三种选择：ios5之前的, 装了gmap的ios6和没装gmap的，在网上转了转，拼出来下面一段代码：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dismiss keyboard in UITextViewController</title>
      <link>http://hzmangel.github.io/post/1166/</link>
      <pubDate>Wed, 18 Jul 2012 14:43:32 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1166/</guid>
      <description>&lt;p&gt;The method is collected from Internet and I just record it with my way.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Playing MongoDB with Rails</title>
      <link>http://hzmangel.github.io/post/1159/</link>
      <pubDate>Tue, 19 Jun 2012 16:07:16 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1159/</guid>
      <description>&lt;p&gt;This post will try to implement a web app used for recording mobile phone of
cheaters. This idea is came from cooler@linuxfb, and I have used this for a
presentation about GAE on 2009, and here is the
&lt;a href=&#34;http://www.slideshare.net/linuxfb/20090222-gae-demo-7083477&#34;&gt;slide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;NOTE: Code still under developing, the Git repo is shown at the end of
article.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tunning Rails with DTrace</title>
      <link>http://hzmangel.github.io/post/1147/</link>
      <pubDate>Thu, 24 May 2012 09:25:42 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1147/</guid>
      <description>&lt;p&gt;This post will talk about how to do performance test of Rails program with
DTrace tool. The testing will be separated into Ruby program part and database
operations part. Please make sure all the tested program has provided probes
to the DTrace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt;: The testing data is still under collection, this post has only DTrace script now, I will update this post after gathering enough testing data.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy RoR application with Nginx</title>
      <link>http://hzmangel.github.io/post/1133/</link>
      <pubDate>Fri, 11 May 2012 11:40:52 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1133/</guid>
      <description>&lt;p&gt;This article will talk something about deploying RoR application to local and remote nginx server.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RoR learning log (2)</title>
      <link>http://hzmangel.github.io/post/1125/</link>
      <pubDate>Mon, 07 May 2012 23:57:16 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1125/</guid>
      <description>&lt;p&gt;This article will finish the ToDo web application, and the prime area in this
article is adding validator and updating templates.&lt;/p&gt;

&lt;p&gt;Here is &lt;a href=&#34;http://www.hzmangel.info/blog/archives/1113&#34;&gt;to RoR learning log (1)&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RoR learning log (1)</title>
      <link>http://hzmangel.github.io/post/1113/</link>
      <pubDate>Mon, 07 May 2012 00:51:32 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1113/</guid>
      <description>&lt;p&gt;Just back from vacation, so the study log for this week is simple.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ruby learning log</title>
      <link>http://hzmangel.github.io/post/1101/</link>
      <pubDate>Sat, 28 Apr 2012 11:34:51 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1101/</guid>
      <description>&lt;p&gt;Just studied Ruby with the tutorial on website &lt;a href=&#34;http://rubylearning.com/&#34; target=&#34;_blank&#34;&gt;rubylearning.com&lt;/a&gt; in the past week, and here are some knowledge gained those days.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>List all CVS tags</title>
      <link>http://hzmangel.github.io/post/1052/</link>
      <pubDate>Mon, 19 Dec 2011 10:41:55 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1052/</guid>
      <description>&lt;p&gt;最近在折腾一个CVS的库，需要把它里面所有的tags给列出来，在网上找了一个&lt;a href=&#34;http://docs.codehaus.org/display/ninja/List+CVS+Tags&#34; target=&#34;_blank&#34;&gt;Perl脚本&lt;/a&gt;，以前一直是直接用的，那天看了看发现原来不是很难，于是写了一个Python的，为的是可以当成函数嵌到我的脚本中。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simple Life Game in HTML5</title>
      <link>http://hzmangel.github.io/post/1049/</link>
      <pubDate>Tue, 29 Nov 2011 02:13:59 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1049/</guid>
      <description>&lt;p&gt;想着好久没写blog了，刚好在看&lt;a title=&#34;计算中的上帝-豆瓣&#34; href=&#34;http://book.douban.com/subject/1140726/&#34; target=&#34;_blank&#34;&gt;计算中的上帝&lt;/a&gt;时，里面有提到生命游戏，所以就顺手写了一个，顺便凑篇文章。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Blocking/Non-Blocking IO and SYN/ASYN IO</title>
      <link>http://hzmangel.github.io/post/1035/</link>
      <pubDate>Sun, 04 Sep 2011 22:18:55 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/1035/</guid>
      <description>&lt;p&gt;这是我上个月&lt;a title=&#34;linuxfb&#34; href=&#34;http://linuxfb.net&#34; target=&#34;_blank&#34;&gt;linuxfb&lt;/a&gt;版聚上讲的话题，因为后续还有一些讨论的东西，所以就一并在这记一下。估计下个月听完Bergwolf的AIO还会有些更新。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Remove packages installed by setup.py install</title>
      <link>http://hzmangel.github.io/post/999/</link>
      <pubDate>Sun, 03 Jul 2011 01:27:23 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/999/</guid>
      <description>从源码装了个Python程序的包结果发现系统的仓库中有，于是想先把源码装的包删除了再去装仓库中的，可惜setup.py没有uninstall参数，于是改问G 神，在stackoverflow上找到了折衷的办法：先用install把包重新装一遍，装的时候记录下文件的改动，然后去把它们统统删除，唔，好囧的办法。
$ python setup.py install --record foo.txt $ cat foo.txt | xargs rm -f  没找到怎么让它输出到stdout，只好用临时文件弄了。</description>
    </item>
    
    <item>
      <title>Get Return Value from popen System Call</title>
      <link>http://hzmangel.github.io/post/984/</link>
      <pubDate>Mon, 30 May 2011 17:09:10 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/984/</guid>
      <description>popen的调用的返回值是popen自己的返回值，并不是被调用程序的返回值，如果需要取被调用程序的返回值，则需要先用pclose()取到返回的status信 息，再用wait的宏进行判断。
int status = pclose(fp); if (status == -1) { printf(&amp;quot;Error reported by pclose()\n&amp;quot;); exit(1); } else { printf(&amp;quot;Process exited? %s\n&amp;quot;, WIFEXITED(status) ? &amp;quot;yes&amp;quot; : &amp;quot;no&amp;quot;); printf(&amp;quot;Process status: %d\n&amp;quot;, WEXITSTATUS(status)); }  其实是满早前问的一个问题，忘更新过来了。</description>
    </item>
    
    <item>
      <title>Using LOCAL in the LOAD DATA SQL command</title>
      <link>http://hzmangel.github.io/post/954/</link>
      <pubDate>Fri, 29 Apr 2011 01:22:04 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/954/</guid>
      <description>LOAD DATA是MySQL中导入数据的命令。对于客户端和服务器不在同一台机器上的情况，如果命令是LOAD DATA INFILE XXXX，那么表示从服务器端的某个路径把文件LOAD进来，而如果用LOAD DATA LOCAL INFILE XXXX，那么就表示是把本地的一个文件上传到服务器端再导入。
今天碰到的问题是SLES的MySQL客户端默认没有把local_infile编译到程序中，于是在LOAD DATA中使用LOCAL命令报错，说不可以在这个版本下使用LOCAL。最后骚扰过group后发现的解决方案是在运行mysql的命令行时加上参数 &amp;ndash;local-infile=1
然后，就能用LOCAL了，然后就没有然后了……
PS：感谢 @lidongyang , @oatgnep 还有 #linuxfb</description>
    </item>
    
    <item>
      <title>Use TaobaoAPI in SAE</title>
      <link>http://hzmangel.github.io/post/879/</link>
      <pubDate>Sun, 13 Mar 2011 16:07:18 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/879/</guid>
      <description>&lt;p&gt;需求是这样的，有一批宝贝需要导入到淘宝的店铺中，但是淘宝助手支持导入CSV文件格式过于诡异，所以只好转向API。&lt;/p&gt;

&lt;p&gt;本来就是一个拼POST参数发请求的事情，淘宝非弄出来一个&lt;a href=&#34;http://code.google.com/p/lotusphp/&#34; target=&#34;_blank&#34;&gt;lotusphp&lt;/a&gt;的框架，本机调试倒是满方便的，但是传到新浪的SAE上后，那满屏的warning看着那叫一个壮观啊。又不想再去学用别的第三方SDK了，于是开始打这个框架的主意。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2010：不给力的我</title>
      <link>http://hzmangel.github.io/post/786/</link>
      <pubDate>Fri, 31 Dec 2010 12:59:10 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/786/</guid>
      <description>&lt;p&gt;写完了一篇给力的山山水水，再想写时发现只剩下不给力的自己了。没办法啊，写吧，谁让咱这一年懒呢~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Django in bluehost</title>
      <link>http://hzmangel.github.io/post/781/</link>
      <pubDate>Sun, 19 Dec 2010 00:59:24 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/781/</guid>
      <description>最近由于某些操蛋的事情，linuxfb需要搬家，但是bluehost主机上不支持通过网页安装django，只好自己折腾了。
1. Install Python environment
bluehost上提供的python的版本是2.4.3（谨慎怀疑是RH5的系统），嫌老，所以要升级。首先，需要从bluehost处申请获得SSH权限，具体做 法去查网站帮助吧。
wget从服务器上下载源码包，然后解压编译安装三部曲，只是注意在配置的时间需要将安装的prefix目录改成自己家目录下的，否则没权限。在安装完成后记得把新p ython所在的目录加到$PATH环境变量中，然后可以使用python -V查看版本
2. Install Django in bluehost
安装Django，不想手动解压安装了，于是先安装了setuptools，接着用easy_install安装了Django。
3. Prepare the Django project
安装完Django后，可以在某处新建一个目录，然后把现有工程的整个目录拷过来。网上的教程中有说需要把setting.py的权限设成600，这样只有自己可读。 如果工程中没有绝对路径，应该不需要对工程做任何更改。
bluehost中通过Apache+fastcgi的方式来支持Django的应用，所以还需要在工程目录下准备一个fcgi的文件，程序很简单，而且ms是通用的 （具体的我没研究过，所以不知道怎么写）
#! #coding:utf-8 import sys, os from os.path import abspath,dirname import sys sys.path.append(dirname(dirname(abspath(__file__)))) os.environ[&#39;DJANGO_SETTINGS_MODULE&#39;] = &amp;quot;settings&amp;quot; from django.core.handlers.wsgi import WSGIHandler from flup.server.fcgi import WSGIServer WSGIServer(WSGIHandler()).run()  编辑完成后，将这个fcgi文件的权限设置成可执行的(chmod 755)。
4. Configure the Apache server
折腾完工程文件后，就需要设置Apache了，使用.htaccess方式。以下是内容，也基本上都是从网上找来的：
AddHandler fcgid-script .fcgi RewriteEngine On RewriteBase / #static file setting RewriteRule ^(media/.*)$ - [L] RewriteCond %{REQUEST_FILENAME} !</description>
    </item>
    
    <item>
      <title>try-except-finally block in python 2.4</title>
      <link>http://hzmangel.github.io/post/778/</link>
      <pubDate>Thu, 09 Dec 2010 09:50:54 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/778/</guid>
      <description>try-except-finally这种语法是在py2.5中才支持的，而在py2.4中只能单独使用try-except或try- finally。为了让脚本有更好的兼容性，只好绕过去了：
#/usr/bin/python2.6 try: print &#39;try&#39; except: print &#39;except&#39; finally: print &#39;finally&#39; #/usr/bin/python2.4 try: try: print &#39;try&#39; except: print &#39;except&#39; finally: print &#39;finally&#39;  从Chromium的代码库(Issue 140005)中找到的方法，呵呵。</description>
    </item>
    
    <item>
      <title>[剧透] Inception</title>
      <link>http://hzmangel.github.io/post/730/</link>
      <pubDate>Fri, 10 Sep 2010 02:24:31 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/730/</guid>
      <description>&lt;p&gt;晚上去看了传说中的 Inception，先不涉及情节的小评论一下：情节中上（因为几年前就看过这类的小说），场面一般（不知道IMAX会不会好些），别的没啥了吧
。然后，现在正式开始剧透，而且本文属于纯无聊加剧透的产物，所以无论看过还是没看过的都要慎入啊~&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>让win下的vim支持非等宽字体</title>
      <link>http://hzmangel.github.io/post/724/</link>
      <pubDate>Mon, 23 Aug 2010 13:08:03 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/724/</guid>
      <description>最近vim升级到了7.3，很喜欢它的相对行号功能(:h rnu)，于是就升级了，然后就毫无悬念的出问题了~ 问题的原因是之前用的vim72是个改版，加上了对非等宽字体的支持，于是在vim中可以将guifontwide设置为YaHei Consolas的混合字体，不过这次升级后没找到原作者的网站，只好自己动手了。 改动在os_mswin.c中，进去后直接找mono，会看到一处注释说忽略非等宽字体，把下面那行注释掉就好，这是diff文件：
diff -r 96b2b1cca7cd src/os_mswin.c --- a/src/os_mswin.c Mon Aug 23 12:55:47 2010 +0800 +++ b/src/os_mswin.c Mon Aug 23 13:05:17 2010 +0800 @@ -3288,8 +3288,11 @@ #ifndef FEAT_PROPORTIONAL_FONTS /* Ignore non-monospace fonts without further ado */ + /* + * hzmangel: I need non-monospace fonts! if ((ntm-&amp;gt;tmPitchAndFamily &amp;amp; 1) != 0) return 1; + */ #endif /* Remember this LOGFONT as a &amp;quot;possible&amp;quot; */  然后直接在vs2010编译环境中用bigvim.bat来编译vim即可，如有需要可以对其中的参数进行修改。写完，收工~ Update at 2010-09-18 在xbeta的帮助下试着编译了一个可以支持取词的版本，用的是这篇文章的方法 感谢Dieken@newsmth，手边没有金山，用有道测试了一下支持取词。目前的版本相比于官方有如下改动：支持非等宽 字体，支持取词，但是去掉了Perl/Lua/Ruby/Tcl的支持（因为编译的机器上没装这些软件）。支持取词改动的diff文件如下</description>
    </item>
    
    <item>
      <title>Merge Two Hg Repositories</title>
      <link>http://hzmangel.github.io/post/721/</link>
      <pubDate>Fri, 09 Jul 2010 01:54:31 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/721/</guid>
      <description>最近在折腾手头上的小项目，发现有一个工程已经建了Hg的版本库，但是想把它给丢到现有的版本库中以方便管理。假设现在用的版本库叫A，需要被merge过来的版本库 叫B，于是有：
A: hg pull –f &amp;lt;repo B&amp;gt; A: hg merge A: hg ci  关键的地方是在那个- f处，如果没有加这个参数会报两个版本库不同源而不让你这么折腾。(via)</description>
    </item>
    
    <item>
      <title>The Capital S in Linux Permission Bitmap</title>
      <link>http://hzmangel.github.io/post/614/</link>
      <pubDate>Thu, 25 Mar 2010 17:22:56 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/614/</guid>
      <description>昨天某人丢过来一个问题，为啥Linux下有的文件权限是-rws，有的是- rwS，当时就没想法了，后来某人被逼求助于Google顺便把结果发给了我，顺便记一下吧~
首先，这个S，不管大写还是小写都是setuid/setgid bit, 大小写的不同之处在于，大写的S表示这个文件没有x位，而小写的则是一般常见（这个只是我 常见的哈，有空查查，如果大S比较常见俺会上来改的）的即是有x权限的。即在chmod中，如果是4755的话，那么它的权限就是通常的-rwsr- xr-x，如果是4655的话，就是大写的-rwSr-xr-x。就这么些东西。
最后多一句嘴，第一位的那个4其实也是bitmap，4代表setuid bit，2代表setgid bit，1代表sticky bit。下面木有了~~</description>
    </item>
    
    <item>
      <title>Using sudo in rsh&#39;s command</title>
      <link>http://hzmangel.github.io/post/610/</link>
      <pubDate>Mon, 22 Mar 2010 17:47:21 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/610/</guid>
      <description>公司的产品需要配置无密码rsh，刚写了一个脚本用于重置环境，但是被系统告知sudo需要在tty的环境下用，所以只好去找把这个安全选项禁掉的方法。开始想当然的 把pts加到/etc/securetty中，可惜不行，最后求助于G神才发现需要在/etc/sudoers中把下面这行注释掉
Defaults requiretty  最后说一句，最好用visudo编辑，而不要手动改~</description>
    </item>
    
    <item>
      <title>Translate errno to error string</title>
      <link>http://hzmangel.github.io/post/593/</link>
      <pubDate>Thu, 18 Mar 2010 12:56:43 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/593/</guid>
      <description>没几行的程序，就是输出errno数字所表示的对应含义
#include #include #include int main(int argc, char* argv[]) { if (argc == 1) { printf (&amp;quot;Please give a number, Thanks~~~\n&amp;quot;); exit(1); } char tmp_str[20]; errno = atoi(argv[1]); sprintf(tmp_str, &amp;quot;errno %3d&amp;quot;, errno); perror(tmp_str); }  </description>
    </item>
    
    <item>
      <title>Simple Process with Mercurial Build-in Server</title>
      <link>http://hzmangel.github.io/post/584/</link>
      <pubDate>Wed, 10 Mar 2010 21:54:02 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/584/</guid>
      <description>在putty里面用vim用够了，于是在远端机上弄了个Hg的版本库，平时在本机做开发，然后写完直接push到远端编译。不想折腾太多的东西，所以就用的是Hg自带 的web服务器。首先在远端某个目录里面新建一个Hg版本库
hg init  然后就可以在远端开服务了，为了少惹麻烦，用了个3456的端口
hg serve -p3456  然后在本地就可以找个目录直接把那边的东西拷过来了
hg clone &amp;lt;host&amp;gt; &amp;lt;local_dir&amp;gt;  使用hg clone的好处是在目录的.hg/hgrc文件中已经存放有默认提交/连接的地址，以后在使用hg pull或者hg push时不需要额外提供地址了。
[paths] default = &amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;  在本地做过修改后，需要check in到版本库中才能成功的被push到远端。如果不加-m参数则会弹出一个编辑器让你输入log
hg ci &amp;lt;-m &amp;quot;log message&amp;quot;&amp;gt;  在push的时候需要注意一个问题。为了安全起见，在默认情况下，Hg对于push是有一些限制的，首先需要SSL，其次需要提交改动的用户有权限。不过由于是自己使 用嘛，所以可以在Hg的配置文件中把这两个限制取消，即在hgrc中加入以下几行
[web] push_ssl = false allow_push = *  根据自己的需求确定这几行加的位置（全局的配置还是某项目相关的配置）。添加过后即可在本地push改动到远端了。如果那个url已经添加到hgrc文件中，则不需要 指定url参数（嗯，适合我这种懒人）。
hg push &amp;lt;url&amp;gt;  在远端此时只是把改动更新到版本库中，并没有把改动真正放到代码中，所以还要在远端运行一下更新命令
hg up  然后，就能编译了，于是一次简单的流程就完鸟。如果在远端有改动，在check in到版本库后，可以在本地使用pull命令把改动同步过来。
hg pull &amp;lt;url&amp;gt;  </description>
    </item>
    
    <item>
      <title>Mask Mouse on Linux</title>
      <link>http://hzmangel.github.io/post/583/</link>
      <pubDate>Wed, 13 Jan 2010 23:58:21 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/583/</guid>
      <description>最近折腾个东西，需要把鼠标弄掉，一是不显示，二是对点击事件没有响应。在网上找了找，用了个比较ugly的方法：
不显示
一般的发行版都能找到一个叫unclutter的软件包，这玩意的功能就是在你idle多少秒后把鼠标从屏幕上抹掉，具体效果就像mplayer放电影里让鼠标不见的 那样。如果把idle设成0(unclutter –idle 0)，那么鼠标就会从屏幕上消失了，不过在移动的过程中，还是能偶尔看到那熟悉的白色箭头
屏蔽响应事件
虽然鼠标不显示了，但是点击事件还是没有屏蔽掉，就是说你去点鼠标，还会是和原来的情况一样。本来想找HAL去直接禁用这个设备，但是在乱逛的过程中找到了xmodm ap这个东西，然后也顺便看到了怎么用它去折腾鼠标，就用了。
这个命令可以用来把鼠标的键重新映射到新的行为上去，在它自己的man page里面，可以看到使用 xmodmap -e &amp;ldquo;pointer = 3 2 1&amp;rdquo; 可以让鼠标左右键对调，其实就是让按左键的响应从1变成3，而右键的从3变成1。执行下面这条命令
xmodmap -e &amp;ldquo;pointer = 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1&amp;rdquo;
把前面的几个按键都给映射到高位上去，这样一般的程序就不会去处理这些个大的响应事件，于是乎就算是屏蔽了事件吧。
就这两条命令，具体的没的细究，有空再看吧。</description>
    </item>
    
    <item>
      <title>在thickbox中关掉自己</title>
      <link>http://hzmangel.github.io/post/495/</link>
      <pubDate>Wed, 16 Dec 2009 00:24:14 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/495/</guid>
      <description>嗯，很拗口的标题吧，我也这么觉得~
最近写的东西用到了jquery，然后也就用到那个很好用的thickbox插件。不过有 一个需求是我在thickbox中用Ajax.post()方式提交表单后需要把这个thickbox窗口关掉。它的close按钮调用的是tb_remove()函 数，但是我在里面调怎么也不起作用，直到最后找到了这个网页，它告诉我，要这么来折腾：
parent.tb_remove()  于是就达成需求了……</description>
    </item>
    
    <item>
      <title>Android中使用自定义Adapter</title>
      <link>http://hzmangel.github.io/post/461/</link>
      <pubDate>Mon, 14 Sep 2009 22:59:50 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/461/</guid>
      <description>&lt;p&gt;算是对这段折腾android的一次小结吧，呵呵。&lt;/p&gt;

&lt;p&gt;一个很简单的界面，上面留块地方放logo或者banner，然后下面放个东西来显示数据。试验中上面使用的是TextView，下面是ListView。对于Lis
tView，当然需要使用Adapter来显示数据啦，但默认的Adapter满足不了需要，因为我的那个一条需要显示的东西不是那么标准，所以折腾了几天，自己弄出
来了一个fooAdapter，顺便还有这篇文章。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>调整Flex默认Application的长宽</title>
      <link>http://hzmangel.github.io/post/425/</link>
      <pubDate>Fri, 12 Jun 2009 00:59:44 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/425/</guid>
      <description>Flex的ms:Application默认有一个大小，我新建的Panel要比这个大小要大，所以默认会出来滚动条，看着比较的不爽。但是如果在Applicati on中把大小通过Height/Width设死的话，在窗口放大或者丢浏览器里面看的时候又不会居中，比较的不爽。最后终于在这找到一篇文章讲这个的，这个参数不是在mxml文件里面设定的，而是需要在编译的时候传入- default-size 800 600 参数。命令行编译的话，是需要把这个参数加在mxml文件后面的，即这样：
mxmlc.exe foobar.mxml -default-size 800 600</description>
    </item>
    
    <item>
      <title>初用 Google App Engine</title>
      <link>http://hzmangel.github.io/post/268/</link>
      <pubDate>Wed, 09 Apr 2008 00:27:00 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/268/</guid>
      <description>在邮件列表中看到了这个东西，感觉满好玩的，是用python的，也满合胃口的，申请了一下，然后过了一会拿到的许可。有人说是在后台有一个sleep 3000，呵呵，不知道是真的假的。反正我是有了，用着玩玩吧。
下载了SDK，没细看里面的目录结构，只是知道里面有一个脚本可以当作开发时的服务器，还有一个脚本可以用以把文件上传。网站上有一个教程，老例子，上来先是一个he lloworld。它的工程中需要有一个app.yaml用以标识工程的ID，刚写的那个yaml文件如下：
application: sonic version: 1 runtime: python api_version: 1 handlers: - url: /.* script: helloworld.py  version是工程的版本，runtime version和api_version这俩目前只有一种选择，不知道以后会不会更改。然后就是写主要的部分了，han dlers。首先是以减号开始，后跟url关键字，冒号后是正则的URL列表，下一行的script是标明处理这个URL的脚本，后面自己写的。如果在url字段中用 了正则表达式，则将请求传入脚本时会自动将匹配的字符串作为参数。后面的那些静态文件和登录啥的没细看，看到再写。
然后就是里面的helloworld.py文件了，最简单的就是三个print，当时看到我直接喷了，真的。 简单的不能再简单的代码了。
print &#39;Content-Type: text/plain&#39; print &#39;&#39; print &#39;Hello, world!&#39;  反正就是这么简单。然后运行它的那个简单的服务器，运行时需要指明工程的目录，即包含有app.yaml文件的目录。运行后就可以通过浏览访问8080端口来测试服务 了。还好第二个程序算是有点内容了，虽然也还是HelloWorld，但是它用了webapp的框架，代码量也有点多了。
import wsgiref.handlers from google.appengine.ext import webapp class MainPage(webapp.RequestHandler): def get(self): self.response.headers[&#39;Content-Type&#39;] = &#39;text/plain&#39; self.response.out.write(&#39;Hello, webapp World!&#39;) def main(): application = webapp.WSGIApplication([(&#39;/&#39;, MainPage)], debug=True) wsgiref.handlers.CGIHandler().run(application) if __name__ == &amp;quot;__main__&amp;quot;: main()  在main函数中，应该是通过WSGIApplication确定了对于某些特定的请求，使用哪个类来处理，get()方法用于响应HTTP GET的请求，其它的函数还没细看。返回结果和上一个差不多，嗯。
最后需要把程序部署到google的服务器上，使用它的appcfg.py上传，需要把app.yaml中的那个application改成申请下来的id，然后上传 ，输入邮箱，密码啥的。然后就可以通过 http://.</description>
    </item>
    
    <item>
      <title>给iphone传电子书</title>
      <link>http://hzmangel.github.io/post/255/</link>
      <pubDate>Mon, 17 Mar 2008 10:21:25 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/255/</guid>
      <description>没在iphone上找到好玩的游戏，只好拿它当电子书阅读器了。文章转换文件名格式说了怎么转换文件格式，其实文本的格式也 需要转换的。把用的脚本写出来吧。
首先，弄到的txt是用cterm从水木上弄下来的，理由很简单，cterm的F4下载太好用了，所以我就懒了，呵呵。然后用HFS(www.rejetto.co m/hfs/)开服务器，本来是想在iphone的SSH上直接wget的，费了好大力气找到了可用的 wget后下载居然是乱码，从文件名到内容，只好自力更生了。
用wget把文章弄到那台Linux机器上，在这需要提一下，HFS有可以直接打包下载文件夹的功能，把一个文件夹打成一个tar包传过来，很好用的功能。
下载下来后，解压。由于我的Linux的终端编码是utf8的，自然乱码就出来了先用convmv转文件名，转完后再用iconv转文本格式。由于iconv不能批量 转，所以写了个py脚本用来弄这个，诶，不会sh脚本的人只能这么玩了。
#!/usr/bin/python2.5 import glob import os filenames = glob.glob(&#39;*.txt&#39;) for foo in filenames: tmp_name = foo.replace(&#39;Download\\&#39;, &#39;&#39;) cmd_str = &#39;iconv -f gb18030 -t utf8 &amp;quot;%s&amp;quot; -o &amp;quot;%s&amp;quot;&#39; % (foo, tmp_name) os.system(cmd_str) os.system(&#39;rm &amp;quot;%s&amp;quot;&#39; % foo) print tmp_name  中间还加上了文件名转换的功能，因为解压时文件名多了点东西。 需要注意的就是那个cmd_str两个%s加上的引号，因为文件名中间有空格，所以如果不加的话命令执 行会出错。源目标格式选18030主要是怕有些特殊字符。等全转完后直接用scp拷到iphone就行了。SSH真的很好用，临了再感叹一下，Linux下的东西有些 真的是方便至极。</description>
    </item>
    
    <item>
      <title>python中的静态成员函数</title>
      <link>http://hzmangel.github.io/post/230/</link>
      <pubDate>Wed, 17 Oct 2007 22:01:56 +0000</pubDate>
      
      <guid>http://hzmangel.github.io/post/230/</guid>
      <description>&lt;p&gt;被C++郁闷了，编译一次老半天，于是又想到了Python。在试着把C++的东西转过来的时候，突然想要用到静态方法，正要在def前面加个static，突然想到
没有这么玩的啊，于是查自带的文档，居然被我找到了。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>